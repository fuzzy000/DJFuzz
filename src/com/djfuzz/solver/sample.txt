JUnit version 4.12
.DirectoryScanner ds = new DirectoryScanner();
<org.apache.tools.ant.DirectoryScanner: void <clinit>()> **** Executed Line: **** 0 **** $z0 = staticinvoke <org.apache.tools.ant.taskdefs.condition.Os: boolean isFamily(java.lang.String)>("openvms")
<org.apache.tools.ant.DirectoryScanner: void <clinit>()> **** Executed Line: **** 1 **** <org.apache.tools.ant.DirectoryScanner: boolean ON_VMS> = $z0
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 1 **** specialinvoke r0.<java.lang.Object: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 2 **** r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.FileSelector[] selectors> = null
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 3 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean haveSlowResults> = 0
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 4 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive> = 1
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 5 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean errorOnMissingDir> = 1
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 6 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks> = 1
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 7 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded> = 1
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 8 **** $r1 = new java.util.HashSet
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 9 **** specialinvoke $r1.<java.util.HashSet: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 10 **** r0.<org.apache.tools.ant.DirectoryScanner: java.util.Set scannedDirs> = $r1
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 11 **** $r2 = new java.util.HashMap
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 12 **** specialinvoke $r2.<java.util.HashMap: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 13 **** r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns> = $r2
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 14 **** $r3 = new java.util.HashMap
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 15 **** specialinvoke $r3.<java.util.HashMap: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 16 **** r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns> = $r3
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 17 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady> = 0
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 18 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean scanning> = 0
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 19 **** $r4 = new java.lang.Object
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 20 **** specialinvoke $r4.<java.lang.Object: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 21 **** r0.<org.apache.tools.ant.DirectoryScanner: java.lang.Object scanLock> = $r4
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 22 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean slowScanning> = 0
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 23 **** $r5 = new java.lang.Object
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 24 **** specialinvoke $r5.<java.lang.Object: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 25 **** r0.<org.apache.tools.ant.DirectoryScanner: java.lang.Object slowScanLock> = $r5
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 26 **** r0.<org.apache.tools.ant.DirectoryScanner: java.lang.IllegalStateException illegal> = null
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 27 **** r0.<org.apache.tools.ant.DirectoryScanner: int maxLevelsOfSymlinks> = 5
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 28 **** $r6 = new java.util.HashSet
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 29 **** specialinvoke $r6.<java.util.HashSet: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void <init>()> **** Executed Line: **** 30 **** r0.<org.apache.tools.ant.DirectoryScanner: java.util.Set notFollowedSymlinks> = $r6
ds.setBasedir(new File(buildRule.getProject().getProperty("output")));
<org.apache.tools.ant.DirectoryScanner: void setBasedir(java.io.File)> **** Executed Line: **** 2 **** r0.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir> = r1
ds.setExcludes(new String[] {beta});
<org.apache.tools.ant.DirectoryScanner: void setExcludes(java.lang.String[])> **** Executed Line: **** 5 **** $i0 = lengthof r0
<org.apache.tools.ant.DirectoryScanner: void setExcludes(java.lang.String[])> **** Executed Line: **** 6 **** $r2 = newarray (java.lang.String)[$i0]
<org.apache.tools.ant.DirectoryScanner: void setExcludes(java.lang.String[])> **** Executed Line: **** 7 **** r1.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes> = $r2
<org.apache.tools.ant.DirectoryScanner: void setExcludes(java.lang.String[])> **** Executed Line: **** 8 **** i2 = 0
<org.apache.tools.ant.DirectoryScanner: void setExcludes(java.lang.String[])> **** Executed Line: **** 9 **** $i1 = lengthof r0
<org.apache.tools.ant.DirectoryScanner: void setExcludes(java.lang.String[])> **** Executed Line: **** 10 **** if i2 >= $i1 goto return
<org.apache.tools.ant.DirectoryScanner: void setExcludes(java.lang.String[])> **** Executed Line: **** 11 **** $r4 = r1.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes>
<org.apache.tools.ant.DirectoryScanner: void setExcludes(java.lang.String[])> **** Executed Line: **** 12 **** $r3 = r0[i2]
<org.apache.tools.ant.DirectoryScanner: java.lang.String normalizePattern(java.lang.String)> **** Executed Line: **** 1 **** $c0 = <java.io.File: char separatorChar>
<org.apache.tools.ant.DirectoryScanner: java.lang.String normalizePattern(java.lang.String)> **** Executed Line: **** 2 **** $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(47, $c0)
<org.apache.tools.ant.DirectoryScanner: java.lang.String normalizePattern(java.lang.String)> **** Executed Line: **** 3 **** $c1 = <java.io.File: char separatorChar>
<org.apache.tools.ant.DirectoryScanner: java.lang.String normalizePattern(java.lang.String)> **** Executed Line: **** 4 **** r6 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(92, $c1)
<org.apache.tools.ant.DirectoryScanner: java.lang.String normalizePattern(java.lang.String)> **** Executed Line: **** 5 **** $r2 = <java.io.File: java.lang.String separator>
<org.apache.tools.ant.DirectoryScanner: java.lang.String normalizePattern(java.lang.String)> **** Executed Line: **** 6 **** $z0 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>($r2)
<org.apache.tools.ant.DirectoryScanner: void setExcludes(java.lang.String[])> **** Executed Line: **** 13 **** $r5 = staticinvoke <org.apache.tools.ant.DirectoryScanner: java.lang.String normalizePattern(java.lang.String)>($r3)
<org.apache.tools.ant.DirectoryScanner: void setExcludes(java.lang.String[])> **** Executed Line: **** 14 **** $r4[i2] = $r5
<org.apache.tools.ant.DirectoryScanner: void setExcludes(java.lang.String[])> **** Executed Line: **** 15 **** i2 = i2 + 1
<org.apache.tools.ant.DirectoryScanner: void setExcludes(java.lang.String[])> **** Executed Line: **** 9 **** $i1 = lengthof r0
ds.scan();
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 1 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.Object scanLock>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 2 **** r67 = $r1
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 3 **** entermonitor $r1
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 4 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean scanning>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 20 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean scanning> = 1
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 21 **** exitmonitor r67
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 27 **** r70 = r0.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 28 **** r71 = r0
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 29 **** entermonitor r0
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 30 **** r0.<org.apache.tools.ant.DirectoryScanner: java.lang.IllegalStateException illegal> = null
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 1 **** $r1 = new org.apache.tools.ant.util.VectorSet
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 2 **** specialinvoke $r1.<org.apache.tools.ant.util.VectorSet: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 3 **** r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector filesIncluded> = $r1
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 4 **** $r2 = new org.apache.tools.ant.util.VectorSet
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 5 **** specialinvoke $r2.<org.apache.tools.ant.util.VectorSet: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 6 **** r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector filesNotIncluded> = $r2
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 7 **** $r3 = new org.apache.tools.ant.util.VectorSet
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 8 **** specialinvoke $r3.<org.apache.tools.ant.util.VectorSet: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 9 **** r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector filesExcluded> = $r3
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 10 **** $r4 = new org.apache.tools.ant.util.VectorSet
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 11 **** specialinvoke $r4.<org.apache.tools.ant.util.VectorSet: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 12 **** r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector filesDeselected> = $r4
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 13 **** $r5 = new org.apache.tools.ant.util.VectorSet
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 14 **** specialinvoke $r5.<org.apache.tools.ant.util.VectorSet: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 15 **** r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsIncluded> = $r5
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 16 **** $r6 = new org.apache.tools.ant.util.VectorSet
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 17 **** specialinvoke $r6.<org.apache.tools.ant.util.VectorSet: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 18 **** r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsNotIncluded> = $r6
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 19 **** $r7 = new org.apache.tools.ant.util.VectorSet
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 20 **** specialinvoke $r7.<org.apache.tools.ant.util.VectorSet: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 21 **** r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsExcluded> = $r7
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 22 **** $r8 = new org.apache.tools.ant.util.VectorSet
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 23 **** specialinvoke $r8.<org.apache.tools.ant.util.VectorSet: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 24 **** r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsDeselected> = $r8
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 25 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir>
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 26 **** if $r9 == null goto $z0 = 0
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 27 **** $z0 = 1
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 30 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded> = $z0
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 31 **** $r10 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Set scannedDirs>
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 32 **** interfaceinvoke $r10.<java.util.Set: void clear()>()
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 33 **** $r11 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Set notFollowedSymlinks>
<org.apache.tools.ant.DirectoryScanner: void clearResults()> **** Executed Line: **** 34 **** interfaceinvoke $r11.<java.util.Set: void clear()>()
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 31 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void clearResults()>()
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 32 **** $r3 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] includes>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 33 **** if $r3 != null goto $z12 = 0
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 34 **** $z12 = 1
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 37 **** z13 = $z12
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 38 **** if z13 == 0 goto $r72 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] includes>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 39 **** $r72 = newarray (java.lang.String)[1]
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 40 **** $r72[0] = "**"
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 43 **** r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] includes> = $r72
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 44 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 48 **** $z14 = 0
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 49 **** z1 = $z14
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 53 **** $r73 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 54 **** r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes> = $r73
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 55 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 56 **** if $r5 == null goto $r74 = r0.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 57 **** $z8 = r0.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 68 **** $r74 = r0.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 86 **** $r6 = r0.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 87 **** $z2 = virtualinvoke $r6.<java.io.File: boolean exists()>()
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 117 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 118 **** $z3 = virtualinvoke $r7.<java.io.File: boolean isDirectory()>()
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 130 **** $r77 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.IllegalStateException illegal>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 134 **** $r8 = <org.apache.tools.ant.types.selectors.TokenizedPath: org.apache.tools.ant.types.selectors.TokenizedPath EMPTY_PATH>
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 2 **** if $z0 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 3 **** $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 4 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] includes>
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 3 **** $r0 = new java.util.ArrayList
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 4 **** $i0 = lengthof r1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 5 **** specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 6 **** r2 = $r0
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 7 **** i3 = 0
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 8 **** $i1 = lengthof r1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 9 **** if i3 >= $i1 goto $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 10 **** $r6 = r1[i3]
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 11 **** $z0 = staticinvoke <org.apache.tools.ant.types.selectors.SelectorUtils: boolean hasWildcards(java.lang.String)>($r6)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 24 **** $r7 = new org.apache.tools.ant.types.selectors.TokenizedPattern
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 25 **** $r8 = r1[i3]
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 26 **** specialinvoke $r7.<org.apache.tools.ant.types.selectors.TokenizedPattern: void <init>(java.lang.String)>($r8)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 27 **** virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 28 **** i3 = i3 + 1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 8 **** $i1 = lengthof r1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 30 **** $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 31 **** $r3 = newarray (org.apache.tools.ant.types.selectors.TokenizedPattern)[$i2]
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 32 **** $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 33 **** $r5 = (org.apache.tools.ant.types.selectors.TokenizedPattern[]) $r4
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 5 **** $r3 = specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])>($r2, $r1)
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 6 **** r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns> = $r3
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 7 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 8 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes>
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 3 **** $r0 = new java.util.ArrayList
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 4 **** $i0 = lengthof r1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 5 **** specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 6 **** r2 = $r0
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 7 **** i3 = 0
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 8 **** $i1 = lengthof r1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 9 **** if i3 >= $i1 goto $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 10 **** $r6 = r1[i3]
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 11 **** $z0 = staticinvoke <org.apache.tools.ant.types.selectors.SelectorUtils: boolean hasWildcards(java.lang.String)>($r6)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 24 **** $r7 = new org.apache.tools.ant.types.selectors.TokenizedPattern
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 25 **** $r8 = r1[i3]
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 26 **** specialinvoke $r7.<org.apache.tools.ant.types.selectors.TokenizedPattern: void <init>(java.lang.String)>($r8)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 27 **** virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 28 **** i3 = i3 + 1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 8 **** $i1 = lengthof r1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 30 **** $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 31 **** $r3 = newarray (org.apache.tools.ant.types.selectors.TokenizedPattern)[$i2]
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 32 **** $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 33 **** $r5 = (org.apache.tools.ant.types.selectors.TokenizedPattern[]) $r4
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 9 **** $r6 = specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])>($r5, $r4)
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 10 **** r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns> = $r6
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 11 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady> = 1
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** if $z0 == 0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $z4 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 16 **** i0 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 19 **** if i0 >= $i1 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 20 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 21 **** $r6 = $r5[i0]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 22 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 23 **** $z3 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z2)
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 24 **** if $z3 == 0 goto i0 = i0 + 1
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 135 **** $z4 = specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>($r8)
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 136 **** if $z4 == 0 goto $r9 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsNotIncluded>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 137 **** $r14 = <org.apache.tools.ant.types.selectors.TokenizedPath: org.apache.tools.ant.types.selectors.TokenizedPath EMPTY_PATH>
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** if $z0 == 0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $z4 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 16 **** i0 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 19 **** if i0 >= $i1 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 20 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 21 **** $r6 = $r5[i0]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 22 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 23 **** $z3 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z2)
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 26 **** i0 = i0 + 1
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 138 **** $z5 = specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)>($r14)
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 139 **** if $z5 != 0 goto $r15 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsExcluded>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 140 **** $r16 = r0.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir>
<org.apache.tools.ant.DirectoryScanner: boolean isSelected(java.lang.String,java.io.File)> **** Executed Line: **** 3 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.FileSelector[] selectors>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 141 **** $z6 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isSelected(java.lang.String,java.io.File)>("", $r16)
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 142 **** if $z6 == 0 goto $r17 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsDeselected>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 143 **** $r18 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsIncluded>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 144 **** virtualinvoke $r18.<java.util.Vector: void addElement(java.lang.Object)>("")
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 1 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 2 **** $r1 = new java.util.HashMap
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 3 **** specialinvoke $r1.<java.util.HashMap: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 4 **** r2 = $r1
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 5 **** i2 = 0
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 6 **** $r3 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 7 **** $i0 = lengthof $r3
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 8 **** if i2 >= $i0 goto $r4 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 9 **** $r37 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 10 **** $r38 = $r37[i2]
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 11 **** r47 = virtualinvoke $r38.<org.apache.tools.ant.types.selectors.TokenizedPattern: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean shouldSkipPattern(java.lang.String)> **** Executed Line: **** 2 **** $z0 = staticinvoke <org.apache.tools.ant.util.FileUtils: boolean isAbsolutePath(java.lang.String)>(r0)
<org.apache.tools.ant.DirectoryScanner: boolean shouldSkipPattern(java.lang.String)> **** Executed Line: **** 12 **** $r2 = r1.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir>
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 12 **** $z19 = specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean shouldSkipPattern(java.lang.String)>(r47)
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 13 **** if $z19 != 0 goto i2 = i2 + 1
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 14 **** $r39 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 15 **** $r40 = $r39[i2]
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 16 **** $r41 = virtualinvoke $r40.<org.apache.tools.ant.types.selectors.TokenizedPattern: org.apache.tools.ant.types.selectors.TokenizedPath rtrimWildcardTokens()>()
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 17 **** interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, r47)
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 18 **** i2 = i2 + 1
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 6 **** $r3 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 7 **** $i0 = lengthof $r3
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 20 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 21 **** $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>()
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 22 **** r48 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 23 **** $z0 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 34 **** $r6 = <org.apache.tools.ant.types.selectors.TokenizedPath: org.apache.tools.ant.types.selectors.TokenizedPath EMPTY_PATH>
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 35 **** $z1 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r6)
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 36 **** if $z1 == 0 goto r51 = null
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 37 **** $r31 = r0.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir>
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 38 **** if $r31 == null goto r51 = null
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 39 **** $r32 = r0.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,java.lang.String,boolean)> **** Executed Line: **** 4 **** $r2 = new org.apache.tools.ant.types.selectors.TokenizedPath
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,java.lang.String,boolean)> **** Executed Line: **** 5 **** specialinvoke $r2.<org.apache.tools.ant.types.selectors.TokenizedPath: void <init>(java.lang.String)>(r3)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean)> **** Executed Line: **** 8 **** r1 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean)> **** Executed Line: **** 40 **** $r4 = new java.util.LinkedList
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean)> **** Executed Line: **** 41 **** specialinvoke $r4.<java.util.LinkedList: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 6 **** r41 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 7 **** $i0 = virtualinvoke r41.<java.lang.String: int length()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 18 **** if z0 == 0 goto $z1 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: boolean hasBeenScanned(java.lang.String)> **** Executed Line: **** 2 **** $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Set scannedDirs>
<org.apache.tools.ant.DirectoryScanner: boolean hasBeenScanned(java.lang.String)> **** Executed Line: **** 3 **** $z0 = interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: boolean hasBeenScanned(java.lang.String)> **** Executed Line: **** 7 **** $z1 = 0
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 19 **** $z16 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean hasBeenScanned(java.lang.String)>(r41)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 22 **** $z1 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 69 **** $r4 = virtualinvoke r3.<java.io.File: java.lang.String getName()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 70 **** virtualinvoke r2.<java.util.LinkedList: void addFirst(java.lang.Object)>($r4)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 71 **** r49 = r40
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 72 **** i5 = lengthof r49
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 73 **** i6 = 0
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 74 **** if i6 >= i5 goto $z2 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 75 **** r50 = r49[i6]
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 76 **** $r6 = new java.lang.StringBuilder
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 77 **** specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 78 **** $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 79 **** $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 80 **** r51 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 81 **** $r9 = new org.apache.tools.ant.types.selectors.TokenizedPath
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 82 **** specialinvoke $r9.<org.apache.tools.ant.types.selectors.TokenizedPath: void <init>(org.apache.tools.ant.types.selectors.TokenizedPath,java.lang.String)>(r0, r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 83 **** r52 = $r9
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 84 **** $r10 = new java.io.File
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 85 **** specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 86 **** r53 = $r10
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 87 **** r11 = virtualinvoke r53.<java.io.File: java.lang.String[] list()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 88 **** if r11 == null goto $z3 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r52)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 89 **** $i1 = lengthof r11
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 101 **** $z4 = virtualinvoke r53.<java.io.File: boolean isDirectory()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 102 **** if $z4 == 0 goto i6 = i6 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 103 **** $z5 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 104 **** if $z5 == 0 goto $z6 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r52)
<org.apache.tools.ant.DirectoryScanner: boolean causesIllegalSymlinkLoop(java.lang.String,java.io.File,java.util.LinkedList)> **** Executed Line: **** 4 **** $i0 = virtualinvoke r0.<java.util.LinkedList: int size()>()
<org.apache.tools.ant.DirectoryScanner: boolean causesIllegalSymlinkLoop(java.lang.String,java.io.File,java.util.LinkedList)> **** Executed Line: **** 5 **** $i1 = r1.<org.apache.tools.ant.DirectoryScanner: int maxLevelsOfSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 105 **** $z9 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean causesIllegalSymlinkLoop(java.lang.String,java.io.File,java.util.LinkedList)>(r50, r3, r2)
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** if $z0 == 0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $z4 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 16 **** i0 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 19 **** if i0 >= $i1 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 20 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 21 **** $r6 = $r5[i0]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 22 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 23 **** $z3 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z2)
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 24 **** if $z3 == 0 goto i0 = i0 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 120 **** $z6 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r52)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 121 **** if $z6 == 0 goto r1.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded> = 0
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 6 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsIncluded>
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 7 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsExcluded>
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 8 **** $r3 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsDeselected>
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 6 **** r1 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 7 **** $z0 = virtualinvoke r2.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 8 **** if $z0 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 9 **** $z1 = virtualinvoke r3.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 10 **** if $z1 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 11 **** $z2 = virtualinvoke r4.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 14 **** z8 = 0
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** if $z0 == 0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $z4 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 16 **** i0 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 19 **** if i0 >= $i1 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 20 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 21 **** $r6 = $r5[i0]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 22 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 23 **** $z3 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z2)
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 26 **** i0 = i0 + 1
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 15 **** $z3 = specialinvoke r5.<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r0)
<org.apache.tools.ant.DirectoryScanner: boolean isSelected(java.lang.String,java.io.File)> **** Executed Line: **** 3 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.FileSelector[] selectors>
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 19 **** $z4 = virtualinvoke r5.<org.apache.tools.ant.DirectoryScanner: boolean isSelected(java.lang.String,java.io.File)>(r1, r6)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 20 **** if $z4 == 0 goto virtualinvoke r4.<java.util.Vector: boolean add(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 21 **** z8 = 1
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 22 **** virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 25 **** $z9 = r5.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded>
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 26 **** $z10 = $z9 & z8
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 27 **** r5.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded> = $z10
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 9 **** specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)>(r1, r2, $r5, $r4, $r3)
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 10 **** if z0 == 0 goto return
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** i1 = 0
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** $i0 = lengthof $r1
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** if i1 >= $i0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $r9 = $r8[i1]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r2.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 4 **** $z1 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchStartOf(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z0)
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 5 **** if $z1 == 0 goto $z4 = 0
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 6 **** $r3 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 2 **** $r0 = new java.lang.StringBuilder
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 3 **** specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 4 **** $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 5 **** $c0 = <java.io.File: char separatorChar>
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 6 **** $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0)
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 7 **** $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**")
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 8 **** r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 9 **** i2 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 10 **** $r7 = r6.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 11 **** $i1 = lengthof $r7
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 12 **** if i2 >= $i1 goto return 1
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 13 **** $r8 = r6.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 14 **** $r9 = $r8[i2]
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 15 **** $r10 = virtualinvoke $r9.<org.apache.tools.ant.types.selectors.TokenizedPattern: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 16 **** $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r5)
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 19 **** i2 = i2 + 1
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 10 **** $r7 = r6.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 11 **** $i1 = lengthof $r7
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 7 **** $z2 = specialinvoke r2.<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)>($r3)
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 8 **** if $z2 == 0 goto $z4 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isDeeper(org.apache.tools.ant.types.selectors.TokenizedPattern,org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean containsPattern(java.lang.String)>("**")
<org.apache.tools.ant.DirectoryScanner: boolean isDeeper(org.apache.tools.ant.types.selectors.TokenizedPattern,org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 8 **** $z1 = 1
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 9 **** $z3 = specialinvoke r2.<org.apache.tools.ant.DirectoryScanner: boolean isDeeper(org.apache.tools.ant.types.selectors.TokenizedPattern,org.apache.tools.ant.types.selectors.TokenizedPath)>(r0, r1)
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 10 **** if $z3 == 0 goto $z4 = 0
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 11 **** $z4 = 1
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 8 **** $z2 = specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)>(r4, $r9)
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 9 **** if $z2 == 0 goto i1 = i1 + 1
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 11 **** $z1 = specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r1)
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 12 **** if $z1 == 0 goto return
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** i1 = 0
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** $i0 = lengthof $r1
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** if i1 >= $i0 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r2 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $r3 = $r2[i1]
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 8 **** $z0 = virtualinvoke $r3.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean endsWith(java.lang.String)>("**")
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 9 **** if $z0 == 0 goto i1 = i1 + 1
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 10 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 11 **** $r5 = $r4[i1]
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 12 **** $r6 = virtualinvoke $r5.<org.apache.tools.ant.types.selectors.TokenizedPattern: org.apache.tools.ant.types.selectors.TokenizedPattern withoutLastToken()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 13 **** $z1 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 14 **** $z2 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r7, $z1)
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** i1 = i1 + 1
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** $i0 = lengthof $r1
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 13 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r1)
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 14 **** if $z2 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 6 **** r41 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 7 **** $i0 = virtualinvoke r41.<java.lang.String: int length()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 8 **** if $i0 <= 0 goto (branch)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 9 **** $r33 = <java.io.File: java.lang.String separator>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 10 **** $z17 = virtualinvoke r41.<java.lang.String: boolean endsWith(java.lang.String)>($r33)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 11 **** if $z17 != 0 goto (branch)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 12 **** $r34 = new java.lang.StringBuilder
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 13 **** specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 14 **** $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 15 **** $r36 = <java.io.File: java.lang.String separator>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 16 **** $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 17 **** r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 18 **** if z0 == 0 goto $z1 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: boolean hasBeenScanned(java.lang.String)> **** Executed Line: **** 2 **** $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Set scannedDirs>
<org.apache.tools.ant.DirectoryScanner: boolean hasBeenScanned(java.lang.String)> **** Executed Line: **** 3 **** $z0 = interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: boolean hasBeenScanned(java.lang.String)> **** Executed Line: **** 7 **** $z1 = 0
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 19 **** $z16 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean hasBeenScanned(java.lang.String)>(r41)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 22 **** $z1 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 69 **** $r4 = virtualinvoke r3.<java.io.File: java.lang.String getName()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 70 **** virtualinvoke r2.<java.util.LinkedList: void addFirst(java.lang.Object)>($r4)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 71 **** r49 = r40
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 72 **** i5 = lengthof r49
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 73 **** i6 = 0
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 74 **** if i6 >= i5 goto $z2 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 75 **** r50 = r49[i6]
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 76 **** $r6 = new java.lang.StringBuilder
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 77 **** specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 78 **** $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 79 **** $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 80 **** r51 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 81 **** $r9 = new org.apache.tools.ant.types.selectors.TokenizedPath
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 82 **** specialinvoke $r9.<org.apache.tools.ant.types.selectors.TokenizedPath: void <init>(org.apache.tools.ant.types.selectors.TokenizedPath,java.lang.String)>(r0, r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 83 **** r52 = $r9
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 84 **** $r10 = new java.io.File
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 85 **** specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 86 **** r53 = $r10
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 87 **** r11 = virtualinvoke r53.<java.io.File: java.lang.String[] list()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 88 **** if r11 == null goto $z3 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r52)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 89 **** $i1 = lengthof r11
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 101 **** $z4 = virtualinvoke r53.<java.io.File: boolean isDirectory()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 102 **** if $z4 == 0 goto i6 = i6 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 103 **** $z5 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 104 **** if $z5 == 0 goto $z6 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r52)
<org.apache.tools.ant.DirectoryScanner: boolean causesIllegalSymlinkLoop(java.lang.String,java.io.File,java.util.LinkedList)> **** Executed Line: **** 4 **** $i0 = virtualinvoke r0.<java.util.LinkedList: int size()>()
<org.apache.tools.ant.DirectoryScanner: boolean causesIllegalSymlinkLoop(java.lang.String,java.io.File,java.util.LinkedList)> **** Executed Line: **** 5 **** $i1 = r1.<org.apache.tools.ant.DirectoryScanner: int maxLevelsOfSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 105 **** $z9 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean causesIllegalSymlinkLoop(java.lang.String,java.io.File,java.util.LinkedList)>(r50, r3, r2)
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** if $z0 == 0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $z4 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 16 **** i0 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 19 **** if i0 >= $i1 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 20 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 21 **** $r6 = $r5[i0]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 22 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 23 **** $z3 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z2)
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 24 **** if $z3 == 0 goto i0 = i0 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 120 **** $z6 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r52)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 121 **** if $z6 == 0 goto r1.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded> = 0
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 6 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsIncluded>
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 7 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsExcluded>
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 8 **** $r3 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsDeselected>
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 6 **** r1 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 7 **** $z0 = virtualinvoke r2.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 8 **** if $z0 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 9 **** $z1 = virtualinvoke r3.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 10 **** if $z1 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 11 **** $z2 = virtualinvoke r4.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 14 **** z8 = 0
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** if $z0 == 0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $z4 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 16 **** i0 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 19 **** if i0 >= $i1 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 20 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 21 **** $r6 = $r5[i0]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 22 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 23 **** $z3 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z2)
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 24 **** if $z3 == 0 goto i0 = i0 + 1
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 15 **** $z3 = specialinvoke r5.<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r0)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 16 **** if $z3 == 0 goto $z4 = virtualinvoke r5.<org.apache.tools.ant.DirectoryScanner: boolean isSelected(java.lang.String,java.io.File)>(r1, r6)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 17 **** virtualinvoke r3.<java.util.Vector: boolean add(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 25 **** $z9 = r5.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded>
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 26 **** $z10 = $z9 & z8
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 27 **** r5.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded> = $z10
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 9 **** specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)>(r1, r2, $r5, $r4, $r3)
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 10 **** if z0 == 0 goto return
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** i1 = 0
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** $i0 = lengthof $r1
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** if i1 >= $i0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $r9 = $r8[i1]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r2.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 4 **** $z1 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchStartOf(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z0)
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 5 **** if $z1 == 0 goto $z4 = 0
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 6 **** $r3 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 2 **** $r0 = new java.lang.StringBuilder
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 3 **** specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 4 **** $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 5 **** $c0 = <java.io.File: char separatorChar>
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 6 **** $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0)
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 7 **** $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**")
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 8 **** r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 9 **** i2 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 10 **** $r7 = r6.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 11 **** $i1 = lengthof $r7
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 12 **** if i2 >= $i1 goto return 1
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 13 **** $r8 = r6.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 14 **** $r9 = $r8[i2]
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 15 **** $r10 = virtualinvoke $r9.<org.apache.tools.ant.types.selectors.TokenizedPattern: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 16 **** $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r5)
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 19 **** i2 = i2 + 1
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 10 **** $r7 = r6.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 11 **** $i1 = lengthof $r7
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 7 **** $z2 = specialinvoke r2.<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)>($r3)
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 8 **** if $z2 == 0 goto $z4 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isDeeper(org.apache.tools.ant.types.selectors.TokenizedPattern,org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean containsPattern(java.lang.String)>("**")
<org.apache.tools.ant.DirectoryScanner: boolean isDeeper(org.apache.tools.ant.types.selectors.TokenizedPattern,org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 8 **** $z1 = 1
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 9 **** $z3 = specialinvoke r2.<org.apache.tools.ant.DirectoryScanner: boolean isDeeper(org.apache.tools.ant.types.selectors.TokenizedPattern,org.apache.tools.ant.types.selectors.TokenizedPath)>(r0, r1)
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 10 **** if $z3 == 0 goto $z4 = 0
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 11 **** $z4 = 1
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 8 **** $z2 = specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)>(r4, $r9)
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 9 **** if $z2 == 0 goto i1 = i1 + 1
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 11 **** $z1 = specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r1)
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 12 **** if $z1 == 0 goto return
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** i1 = 0
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** $i0 = lengthof $r1
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** if i1 >= $i0 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r2 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $r3 = $r2[i1]
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 8 **** $z0 = virtualinvoke $r3.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean endsWith(java.lang.String)>("**")
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 9 **** if $z0 == 0 goto i1 = i1 + 1
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 10 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 11 **** $r5 = $r4[i1]
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 12 **** $r6 = virtualinvoke $r5.<org.apache.tools.ant.types.selectors.TokenizedPattern: org.apache.tools.ant.types.selectors.TokenizedPattern withoutLastToken()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 13 **** $z1 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 14 **** $z2 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r7, $z1)
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 15 **** if $z2 == 0 goto i1 = i1 + 1
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 13 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r1)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 122 **** specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)>(r52, r53, z0, r11, r2)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 135 **** i6 = i6 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 137 **** $z2 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 138 **** if $z2 == 0 goto return
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 139 **** virtualinvoke r2.<java.util.LinkedList: java.lang.Object removeFirst()>()
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 15 **** specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)>(r2, r1, z0, r6, r7)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 122 **** specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)>(r52, r53, z0, r11, r2)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 135 **** i6 = i6 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 137 **** $z2 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 138 **** if $z2 == 0 goto return
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 139 **** virtualinvoke r2.<java.util.LinkedList: java.lang.Object removeFirst()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean)> **** Executed Line: **** 42 **** specialinvoke r2.<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)>(r0, r3, z0, r1, $r4)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,java.lang.String,boolean)> **** Executed Line: **** 6 **** specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $r2, z0)
<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()> **** Executed Line: **** 40 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,java.lang.String,boolean)>($r32, "", 1)
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 154 **** specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: void checkIncludePatterns()>()
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 1 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 2 **** interfaceinvoke $r1.<java.util.Map: void clear()>()
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 3 **** $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 4 **** interfaceinvoke $r2.<java.util.Map: void clear()>()
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 5 **** r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns> = null
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 6 **** r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns> = null
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 7 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady> = 0
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 155 **** specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: void clearCaches()>()
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 156 **** if z13 == 0 goto $r78 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] includes>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 157 **** $r78 = null
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 160 **** r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] includes> = $r78
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 164 **** $r79 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 165 **** r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes> = $r79
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 166 **** exitmonitor r71
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 172 **** r0.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir> = r70
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 173 **** $r10 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.Object scanLock>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 174 **** r80 = $r10
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 175 **** entermonitor $r10
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 176 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean scanning> = 0
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 177 **** $r11 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.Object scanLock>
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 178 **** virtualinvoke $r11.<java.lang.Object: void notifyAll()>()
<org.apache.tools.ant.DirectoryScanner: void scan()> **** Executed Line: **** 179 **** exitmonitor r80
List<String> dirs = Arrays.asList(ds.getExcludedDirectories());
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 1 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.Object slowScanLock>
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 2 **** r31 = $r1
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 3 **** entermonitor $r1
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 4 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean haveSlowResults>
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 8 **** $z1 = r0.<org.apache.tools.ant.DirectoryScanner: boolean slowScanning>
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 20 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean slowScanning> = 1
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 21 **** exitmonitor r31
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 27 **** r34 = r0
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 28 **** entermonitor r0
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 29 **** $r3 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] includes>
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 30 **** if $r3 != null goto $z3 = 0
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 31 **** $z3 = 1
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 34 **** z4 = $z3
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 35 **** if z4 == 0 goto $r35 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] includes>
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 36 **** $r35 = newarray (java.lang.String)[1]
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 37 **** $r35[0] = "**"
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 40 **** r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] includes> = $r35
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 41 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes>
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 45 **** $z5 = 0
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 46 **** z6 = $z5
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 50 **** $r36 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes>
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 51 **** r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes> = $r36
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 52 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsExcluded>
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 53 **** $i0 = virtualinvoke $r5.<java.util.Vector: int size()>()
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 54 **** r6 = newarray (java.lang.String)[$i0]
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 55 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsExcluded>
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 56 **** virtualinvoke $r7.<java.util.Vector: void copyInto(java.lang.Object[])>(r6)
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 57 **** $r8 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsNotIncluded>
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 58 **** $i1 = virtualinvoke $r8.<java.util.Vector: int size()>()
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 59 **** r9 = newarray (java.lang.String)[$i1]
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 60 **** $r10 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsNotIncluded>
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 61 **** virtualinvoke $r10.<java.util.Vector: void copyInto(java.lang.Object[])>(r9)
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 2 **** if $z0 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 3 **** $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 4 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] includes>
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 3 **** $r0 = new java.util.ArrayList
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 4 **** $i0 = lengthof r1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 5 **** specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 6 **** r2 = $r0
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 7 **** i3 = 0
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 8 **** $i1 = lengthof r1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 9 **** if i3 >= $i1 goto $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 10 **** $r6 = r1[i3]
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 11 **** $z0 = staticinvoke <org.apache.tools.ant.types.selectors.SelectorUtils: boolean hasWildcards(java.lang.String)>($r6)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 24 **** $r7 = new org.apache.tools.ant.types.selectors.TokenizedPattern
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 25 **** $r8 = r1[i3]
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 26 **** specialinvoke $r7.<org.apache.tools.ant.types.selectors.TokenizedPattern: void <init>(java.lang.String)>($r8)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 27 **** virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 28 **** i3 = i3 + 1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 8 **** $i1 = lengthof r1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 30 **** $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 31 **** $r3 = newarray (org.apache.tools.ant.types.selectors.TokenizedPattern)[$i2]
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 32 **** $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 33 **** $r5 = (org.apache.tools.ant.types.selectors.TokenizedPattern[]) $r4
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 5 **** $r3 = specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])>($r2, $r1)
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 6 **** r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns> = $r3
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 7 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 8 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes>
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 3 **** $r0 = new java.util.ArrayList
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 4 **** $i0 = lengthof r1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 5 **** specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 6 **** r2 = $r0
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 7 **** i3 = 0
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 8 **** $i1 = lengthof r1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 9 **** if i3 >= $i1 goto $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 10 **** $r6 = r1[i3]
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 11 **** $z0 = staticinvoke <org.apache.tools.ant.types.selectors.SelectorUtils: boolean hasWildcards(java.lang.String)>($r6)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 24 **** $r7 = new org.apache.tools.ant.types.selectors.TokenizedPattern
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 25 **** $r8 = r1[i3]
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 26 **** specialinvoke $r7.<org.apache.tools.ant.types.selectors.TokenizedPattern: void <init>(java.lang.String)>($r8)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 27 **** virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 28 **** i3 = i3 + 1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 8 **** $i1 = lengthof r1
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 30 **** $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>()
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 31 **** $r3 = newarray (org.apache.tools.ant.types.selectors.TokenizedPattern)[$i2]
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 32 **** $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3)
<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])> **** Executed Line: **** 33 **** $r5 = (org.apache.tools.ant.types.selectors.TokenizedPattern[]) $r4
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 9 **** $r6 = specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] fillNonPatternSet(java.util.Map,java.lang.String[])>($r5, $r4)
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 10 **** r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns> = $r6
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 11 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady> = 1
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 62 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 2 **** i1 = 0
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 3 **** $i0 = lengthof r0
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 4 **** if i1 >= $i0 goto return
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 5 **** $r1 = new org.apache.tools.ant.types.selectors.TokenizedPath
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 6 **** $r2 = r0[i1]
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 7 **** specialinvoke $r1.<org.apache.tools.ant.types.selectors.TokenizedPath: void <init>(java.lang.String)>($r2)
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 8 **** r3 = $r1
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** i1 = 0
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** $i0 = lengthof $r1
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** if i1 >= $i0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $r9 = $r8[i1]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r2.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 4 **** $z1 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchStartOf(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z0)
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 5 **** if $z1 == 0 goto $z4 = 0
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 6 **** $r3 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 2 **** $r0 = new java.lang.StringBuilder
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 3 **** specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 4 **** $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 5 **** $c0 = <java.io.File: char separatorChar>
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 6 **** $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0)
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 7 **** $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**")
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 8 **** r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 9 **** i2 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 10 **** $r7 = r6.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 11 **** $i1 = lengthof $r7
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 12 **** if i2 >= $i1 goto return 1
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 13 **** $r8 = r6.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 14 **** $r9 = $r8[i2]
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 15 **** $r10 = virtualinvoke $r9.<org.apache.tools.ant.types.selectors.TokenizedPattern: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 16 **** $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r5)
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 19 **** i2 = i2 + 1
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 10 **** $r7 = r6.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)> **** Executed Line: **** 11 **** $i1 = lengthof $r7
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 7 **** $z2 = specialinvoke r2.<org.apache.tools.ant.DirectoryScanner: boolean isMorePowerfulThanExcludes(java.lang.String)>($r3)
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 8 **** if $z2 == 0 goto $z4 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isDeeper(org.apache.tools.ant.types.selectors.TokenizedPattern,org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean containsPattern(java.lang.String)>("**")
<org.apache.tools.ant.DirectoryScanner: boolean isDeeper(org.apache.tools.ant.types.selectors.TokenizedPattern,org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 8 **** $z1 = 1
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 9 **** $z3 = specialinvoke r2.<org.apache.tools.ant.DirectoryScanner: boolean isDeeper(org.apache.tools.ant.types.selectors.TokenizedPattern,org.apache.tools.ant.types.selectors.TokenizedPath)>(r0, r1)
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 10 **** if $z3 == 0 goto $z4 = 0
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)> **** Executed Line: **** 11 **** $z4 = 1
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 8 **** $z2 = specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,org.apache.tools.ant.types.selectors.TokenizedPattern)>(r4, $r9)
<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 9 **** if $z2 == 0 goto i1 = i1 + 1
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 9 **** $z0 = specialinvoke r4.<org.apache.tools.ant.DirectoryScanner: boolean couldHoldIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r3)
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 10 **** if $z0 == 0 goto $r5 = new java.io.File
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** i1 = 0
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** $i0 = lengthof $r1
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** if i1 >= $i0 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r2 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $r3 = $r2[i1]
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 8 **** $z0 = virtualinvoke $r3.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean endsWith(java.lang.String)>("**")
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 9 **** if $z0 == 0 goto i1 = i1 + 1
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 10 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 11 **** $r5 = $r4[i1]
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 12 **** $r6 = virtualinvoke $r5.<org.apache.tools.ant.types.selectors.TokenizedPattern: org.apache.tools.ant.types.selectors.TokenizedPattern withoutLastToken()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 13 **** $z1 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 14 **** $z2 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r7, $z1)
<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 15 **** if $z2 == 0 goto i1 = i1 + 1
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 11 **** $z1 = virtualinvoke r4.<org.apache.tools.ant.DirectoryScanner: boolean contentsExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r3)
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 12 **** if $z1 == 0 goto i1 = i1 + 1
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 13 **** $r5 = new java.io.File
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 14 **** $r7 = r4.<org.apache.tools.ant.DirectoryScanner: java.io.File basedir>
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 15 **** $r6 = r0[i1]
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 16 **** specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r6)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean)> **** Executed Line: **** 8 **** r1 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean)> **** Executed Line: **** 40 **** $r4 = new java.util.LinkedList
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean)> **** Executed Line: **** 41 **** specialinvoke $r4.<java.util.LinkedList: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 6 **** r41 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 7 **** $i0 = virtualinvoke r41.<java.lang.String: int length()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 8 **** if $i0 <= 0 goto (branch)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 9 **** $r33 = <java.io.File: java.lang.String separator>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 10 **** $z17 = virtualinvoke r41.<java.lang.String: boolean endsWith(java.lang.String)>($r33)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 11 **** if $z17 != 0 goto (branch)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 12 **** $r34 = new java.lang.StringBuilder
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 13 **** specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 14 **** $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 15 **** $r36 = <java.io.File: java.lang.String separator>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 16 **** $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 17 **** r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 22 **** $z1 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 69 **** $r4 = virtualinvoke r3.<java.io.File: java.lang.String getName()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 70 **** virtualinvoke r2.<java.util.LinkedList: void addFirst(java.lang.Object)>($r4)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 71 **** r49 = r40
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 72 **** i5 = lengthof r49
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 73 **** i6 = 0
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 74 **** if i6 >= i5 goto $z2 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 75 **** r50 = r49[i6]
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 76 **** $r6 = new java.lang.StringBuilder
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 77 **** specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 78 **** $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 79 **** $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 80 **** r51 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 81 **** $r9 = new org.apache.tools.ant.types.selectors.TokenizedPath
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 82 **** specialinvoke $r9.<org.apache.tools.ant.types.selectors.TokenizedPath: void <init>(org.apache.tools.ant.types.selectors.TokenizedPath,java.lang.String)>(r0, r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 83 **** r52 = $r9
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 84 **** $r10 = new java.io.File
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 85 **** specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 86 **** r53 = $r10
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 87 **** r11 = virtualinvoke r53.<java.io.File: java.lang.String[] list()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 88 **** if r11 == null goto $z3 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r52)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 89 **** $i1 = lengthof r11
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 101 **** $z4 = virtualinvoke r53.<java.io.File: boolean isDirectory()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 102 **** if $z4 == 0 goto i6 = i6 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 103 **** $z5 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 104 **** if $z5 == 0 goto $z6 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r52)
<org.apache.tools.ant.DirectoryScanner: boolean causesIllegalSymlinkLoop(java.lang.String,java.io.File,java.util.LinkedList)> **** Executed Line: **** 4 **** $i0 = virtualinvoke r0.<java.util.LinkedList: int size()>()
<org.apache.tools.ant.DirectoryScanner: boolean causesIllegalSymlinkLoop(java.lang.String,java.io.File,java.util.LinkedList)> **** Executed Line: **** 5 **** $i1 = r1.<org.apache.tools.ant.DirectoryScanner: int maxLevelsOfSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 105 **** $z9 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean causesIllegalSymlinkLoop(java.lang.String,java.io.File,java.util.LinkedList)>(r50, r3, r2)
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** if $z0 == 0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $z4 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 16 **** i0 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 19 **** if i0 >= $i1 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 20 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 21 **** $r6 = $r5[i0]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 22 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 23 **** $z3 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z2)
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 24 **** if $z3 == 0 goto i0 = i0 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 120 **** $z6 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r52)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 121 **** if $z6 == 0 goto r1.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded> = 0
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 6 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsIncluded>
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 7 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsExcluded>
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 8 **** $r3 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector dirsDeselected>
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 6 **** r1 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 7 **** $z0 = virtualinvoke r2.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 8 **** if $z0 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 9 **** $z1 = virtualinvoke r3.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 10 **** if $z1 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 11 **** $z2 = virtualinvoke r4.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 14 **** z8 = 0
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** if $z0 == 0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $z4 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 16 **** i0 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 19 **** if i0 >= $i1 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 20 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 21 **** $r6 = $r5[i0]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 22 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 23 **** $z3 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z2)
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 24 **** if $z3 == 0 goto i0 = i0 + 1
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 15 **** $z3 = specialinvoke r5.<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r0)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 16 **** if $z3 == 0 goto $z4 = virtualinvoke r5.<org.apache.tools.ant.DirectoryScanner: boolean isSelected(java.lang.String,java.io.File)>(r1, r6)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 17 **** virtualinvoke r3.<java.util.Vector: boolean add(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 25 **** $z9 = r5.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded>
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 26 **** $z10 = $z9 & z8
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 27 **** r5.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded> = $z10
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 9 **** specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)>(r1, r2, $r5, $r4, $r3)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 122 **** specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: void accountForIncludedDir(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,boolean,java.lang.String[],java.util.LinkedList)>(r52, r53, z0, r11, r2)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 133 **** if z0 != 0 goto i6 = i6 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 6 **** r41 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 7 **** $i0 = virtualinvoke r41.<java.lang.String: int length()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 8 **** if $i0 <= 0 goto (branch)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 9 **** $r33 = <java.io.File: java.lang.String separator>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 10 **** $z17 = virtualinvoke r41.<java.lang.String: boolean endsWith(java.lang.String)>($r33)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 11 **** if $z17 != 0 goto (branch)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 12 **** $r34 = new java.lang.StringBuilder
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 13 **** specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 14 **** $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 15 **** $r36 = <java.io.File: java.lang.String separator>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 16 **** $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 17 **** r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 22 **** $z1 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 69 **** $r4 = virtualinvoke r3.<java.io.File: java.lang.String getName()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 70 **** virtualinvoke r2.<java.util.LinkedList: void addFirst(java.lang.Object)>($r4)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 71 **** r49 = r40
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 72 **** i5 = lengthof r49
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 73 **** i6 = 0
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 74 **** if i6 >= i5 goto $z2 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 75 **** r50 = r49[i6]
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 76 **** $r6 = new java.lang.StringBuilder
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 77 **** specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 78 **** $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 79 **** $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 80 **** r51 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 81 **** $r9 = new org.apache.tools.ant.types.selectors.TokenizedPath
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 82 **** specialinvoke $r9.<org.apache.tools.ant.types.selectors.TokenizedPath: void <init>(org.apache.tools.ant.types.selectors.TokenizedPath,java.lang.String)>(r0, r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 83 **** r52 = $r9
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 84 **** $r10 = new java.io.File
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 85 **** specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 86 **** r53 = $r10
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 87 **** r11 = virtualinvoke r53.<java.io.File: java.lang.String[] list()>()
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** if $z0 == 0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $z4 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 16 **** i0 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 19 **** if i0 >= $i1 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 20 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 21 **** $r6 = $r5[i0]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 22 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 23 **** $z3 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z2)
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 24 **** if $z3 == 0 goto i0 = i0 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 93 **** $z3 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r52)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 94 **** if $z3 == 0 goto r1.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded> = 0
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedFile(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File)> **** Executed Line: **** 3 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector filesIncluded>
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedFile(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File)> **** Executed Line: **** 4 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector filesExcluded>
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedFile(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File)> **** Executed Line: **** 5 **** $r3 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector filesDeselected>
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 6 **** r1 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 7 **** $z0 = virtualinvoke r2.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 8 **** if $z0 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 9 **** $z1 = virtualinvoke r3.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 10 **** if $z1 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 11 **** $z2 = virtualinvoke r4.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 14 **** z8 = 0
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** if $z0 == 0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $z4 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 16 **** i0 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 19 **** if i0 >= $i1 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 20 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 21 **** $r6 = $r5[i0]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 22 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 23 **** $z3 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z2)
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 24 **** if $z3 == 0 goto i0 = i0 + 1
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 15 **** $z3 = specialinvoke r5.<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r0)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 16 **** if $z3 == 0 goto $z4 = virtualinvoke r5.<org.apache.tools.ant.DirectoryScanner: boolean isSelected(java.lang.String,java.io.File)>(r1, r6)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 17 **** virtualinvoke r3.<java.util.Vector: boolean add(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 25 **** $z9 = r5.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded>
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 26 **** $z10 = $z9 & z8
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 27 **** r5.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded> = $z10
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedFile(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File)> **** Executed Line: **** 6 **** specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)>(r1, r2, $r5, $r4, $r3)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 95 **** specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: void accountForIncludedFile(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File)>(r52, r53)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 135 **** i6 = i6 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 137 **** $z2 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 138 **** if $z2 == 0 goto return
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 139 **** virtualinvoke r2.<java.util.LinkedList: java.lang.Object removeFirst()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 134 **** specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)>(r53, r52, z0, r11, r2)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 135 **** i6 = i6 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 74 **** if i6 >= i5 goto $z2 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 75 **** r50 = r49[i6]
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 76 **** $r6 = new java.lang.StringBuilder
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 77 **** specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 78 **** $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 79 **** $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 80 **** r51 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 81 **** $r9 = new org.apache.tools.ant.types.selectors.TokenizedPath
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 82 **** specialinvoke $r9.<org.apache.tools.ant.types.selectors.TokenizedPath: void <init>(org.apache.tools.ant.types.selectors.TokenizedPath,java.lang.String)>(r0, r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 83 **** r52 = $r9
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 84 **** $r10 = new java.io.File
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 85 **** specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, r50)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 86 **** r53 = $r10
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 87 **** r11 = virtualinvoke r53.<java.io.File: java.lang.String[] list()>()
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** if $z0 == 0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $z4 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 16 **** i0 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 19 **** if i0 >= $i1 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 20 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 21 **** $r6 = $r5[i0]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 22 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 23 **** $z3 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z2)
<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 24 **** if $z3 == 0 goto i0 = i0 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 93 **** $z3 = specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: boolean isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r52)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 94 **** if $z3 == 0 goto r1.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded> = 0
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedFile(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File)> **** Executed Line: **** 3 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector filesIncluded>
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedFile(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File)> **** Executed Line: **** 4 **** $r4 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector filesExcluded>
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedFile(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File)> **** Executed Line: **** 5 **** $r3 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Vector filesDeselected>
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 6 **** r1 = virtualinvoke r0.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 7 **** $z0 = virtualinvoke r2.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 8 **** if $z0 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 9 **** $z1 = virtualinvoke r3.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 10 **** if $z1 != 0 goto return
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 11 **** $z2 = virtualinvoke r4.<java.util.Vector: boolean contains(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 14 **** z8 = 0
<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 2 **** virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: void ensureNonPatternSetsReady()>()
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 3 **** $z0 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 4 **** if $z0 == 0 goto $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 5 **** $r7 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 6 **** $r8 = virtualinvoke r1.<org.apache.tools.ant.types.selectors.TokenizedPath: java.lang.String toString()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 7 **** $z4 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r8)
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 16 **** i0 = 0
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 17 **** $r9 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 18 **** $i1 = lengthof $r9
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 19 **** if i0 >= $i1 goto return 0
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 20 **** $r5 = r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 21 **** $r6 = $r5[i0]
<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()> **** Executed Line: **** 1 **** $z0 = r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive>
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 22 **** $z2 = virtualinvoke r0.<org.apache.tools.ant.DirectoryScanner: boolean isCaseSensitive()>()
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 23 **** $z3 = virtualinvoke $r6.<org.apache.tools.ant.types.selectors.TokenizedPattern: boolean matchPath(org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>(r1, $z2)
<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)> **** Executed Line: **** 24 **** if $z3 == 0 goto i0 = i0 + 1
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 15 **** $z3 = specialinvoke r5.<org.apache.tools.ant.DirectoryScanner: boolean isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)>(r0)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 16 **** if $z3 == 0 goto $z4 = virtualinvoke r5.<org.apache.tools.ant.DirectoryScanner: boolean isSelected(java.lang.String,java.io.File)>(r1, r6)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 17 **** virtualinvoke r3.<java.util.Vector: boolean add(java.lang.Object)>(r1)
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 25 **** $z9 = r5.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded>
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 26 **** $z10 = $z9 & z8
<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)> **** Executed Line: **** 27 **** r5.<org.apache.tools.ant.DirectoryScanner: boolean everythingIncluded> = $z10
<org.apache.tools.ant.DirectoryScanner: void accountForIncludedFile(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File)> **** Executed Line: **** 6 **** specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: void processIncluded(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File,java.util.Vector,java.util.Vector,java.util.Vector)>(r1, r2, $r5, $r4, $r3)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 95 **** specialinvoke r1.<org.apache.tools.ant.DirectoryScanner: void accountForIncludedFile(org.apache.tools.ant.types.selectors.TokenizedPath,java.io.File)>(r52, r53)
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 135 **** i6 = i6 + 1
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 137 **** $z2 = r1.<org.apache.tools.ant.DirectoryScanner: boolean followSymlinks>
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 138 **** if $z2 == 0 goto return
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)> **** Executed Line: **** 139 **** virtualinvoke r2.<java.util.LinkedList: java.lang.Object removeFirst()>()
<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean)> **** Executed Line: **** 42 **** specialinvoke r2.<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean,java.lang.String[],java.util.LinkedList)>(r0, r3, z0, r1, $r4)
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 17 **** specialinvoke r4.<org.apache.tools.ant.DirectoryScanner: void scandir(java.io.File,org.apache.tools.ant.types.selectors.TokenizedPath,boolean)>($r5, r3, 0)
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 18 **** i1 = i1 + 1
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 3 **** $i0 = lengthof r0
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 63 **** specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])>(r6)
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 2 **** i1 = 0
<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])> **** Executed Line: **** 3 **** $i0 = lengthof r0
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 64 **** specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: void processSlowScan(java.lang.String[])>(r9)
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 1 **** $r1 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map includeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 2 **** interfaceinvoke $r1.<java.util.Map: void clear()>()
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 3 **** $r2 = r0.<org.apache.tools.ant.DirectoryScanner: java.util.Map excludeNonPatterns>
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 4 **** interfaceinvoke $r2.<java.util.Map: void clear()>()
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 5 **** r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] includePatterns> = null
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 6 **** r0.<org.apache.tools.ant.DirectoryScanner: org.apache.tools.ant.types.selectors.TokenizedPattern[] excludePatterns> = null
<org.apache.tools.ant.DirectoryScanner: void clearCaches()> **** Executed Line: **** 7 **** r0.<org.apache.tools.ant.DirectoryScanner: boolean areNonPatternSetsReady> = 0
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 65 **** specialinvoke r0.<org.apache.tools.ant.DirectoryScanner: void clearCaches()>()
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 66 **** if z4 == 0 goto $r37 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] includes>
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 67 **** $r37 = null
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 70 **** r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] includes> = $r37
<org.apache.tools.ant.DirectoryScanner: void slowScan()> **** Executed Line: **** 74 **** $r38 = r0.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] excludes>
E
Time: 0.275
There was 1 failure:
1) testRecursiveExcludes(org.apache.tools.ant.DirectoryScannerTest)
java.lang.IllegalMonitorStateException
	at org.apache.tools.ant.DirectoryScanner.slowScan(DirectoryScanner.java:1100)
	at org.apache.tools.ant.DirectoryScanner.getExcludedDirectories(DirectoryScanner.java:1714)
	at org.apache.tools.ant.DirectoryScannerTest.testRecursiveExcludes(DirectoryScannerTest.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.runner.JUnitCore.runMain(JUnitCore.java:77)
	at org.junit.runner.JUnitCore.main(JUnitCore.java:36)

FAILURES!!!
Tests run: 1,  Failures: 1

